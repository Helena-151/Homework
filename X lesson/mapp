#include <bits/stdc++.h>
#define pb push_back
#define x first
#define y second
using namespace std;

int n, m, z, dp[1000][1000], last_step[1000][1000], val_cl_h[1000][1000], val_cl_s[1000][1000], mapp[1000][1000];
pair<int,int> strt, fnsh;
int main(){
    cin >> n >> m;
    char c;
    for(int i=1; i<=n; i++)
    {
        for(int j=1; j<=m; j++)
            {
                cin >> c;
                if(c =='H')
                    mapp[i][j]=1;
                else
                    mapp[i][j]=0;
            }
    }
    for(int i=1; i<=n; i++)
    {
        for(int j=1; j<=m; j++)
            {
                cin >> z;
                if(mapp[i][j])
                    {
                        val_cl_h[i][j]=z;
                        val_cl_s[i][j]=0;
                    }
                else
                    {
                        val_cl_h[i][j]=0;
                        val_cl_s[i][j]=z;
                    }
            }
    }
    cin >> strt.x >> strt.y >> fnsh.x >> fnsh.y;
    last_step[strt.y][strt.x]=-1;
    for(int i=strt.y;i>=fnsh.y;i--)
        for(int j=strt.x;j>=fnsh.x;j--)
        {
            if(last_step[i][j]!=-1)
            if(i==strt.y)
                {
                    dp[i][j]=dp[i][j+1]+val_cl_h[i][j+1];
                    last_step[i][j]=1;
                }
            else
            if(j==strt.x)
                {
                    dp[i][j]=dp[i+1][j]+val_cl_h[i+1][j];
                    last_step[i][j]=0;
                }
            else
            {
                int nrth,est,ne;

                if(last_step[i+1][j]==1){
                    nrth=dp[i+1][j]+val_cl_h[i+1][j];
                }
                else
                {
                    nrth=dp[i+1][j]+val_cl_h[i+1][j]+val_cl_h[i+1][j+1];
                }

                if(last_step[i][j+1]==0){
                    est=dp[i][j+1]+val_cl_h[i][j+1];
                }
                else
                {
                    est=dp[i][j+1]+val_cl_h[i][j+1]+val_cl_h[i+1][j+1];
                }

                if(mapp[i+1][j+1])
                    ne=-1;
                else
                    ne=dp[i+1][j+1]+val_cl_s[i+1][j+1];
                pair<int,int> opti[3];
                opti[0]={nrth,0};
                opti[1]={est,1};
                opti[2]={ne,2};
                sort(opti,opti+3);
                dp[i][j]=opti[2].first;
                last_step[i][j]=opti[2].second;
            }
        }
    stack<int> ans_way;
    int i=fnsh.y,j=fnsh.x;
    while(i!=strt.y || j!=strt.x)
    {
        ans_way.push(last_step[i][j]);
        if(last_step[i][j]==0)
        {
            i++;
        }
        else
        if(last_step[i][j]==1)
        {
            j++;
        }
        else
        if(last_step[i][j]==2)
        {
            i++;
            j++;
        }
    }
    cout << dp[fnsh.y][fnsh.x] << endl;
    while(ans_way.size()>0)
    {
        if(ans_way.top())
        {
            if(ans_way.top()==1)
                cout << "E ";
            else
                cout << "NE ";
        }
        else
            cout << "N ";
        ans_way.pop();
    }
    return 0;
}
